#!/usr/bin/env bash

#: TITLE: crc-config
#: DATE: 2019-04-23
#: VERSION: 0.1.0
#: AUTHOR: "Alex Y" <aleksandryackovlev@yandex.ru>
#: DESCRIPTION: CRUD for configuration files

[[ $crcConfigLoaded ]] && return

source ./crc-env
source ./crc-utils

# DESCRIPTION: Sources the global config file if it exists
# USAGE: readGlobalConfig
readGlobalConfig() {
  if [[ -f $(crc-env globalConfigFile) ]]; then
    source "$(crc-env globalConfigFile)"
  fi
}

# DESCRIPTION: Finds the local config file if it exists
# USAGE: findLocalConfig
findLocalConfig() {
  local currentDir
  local localConfigFile

  currentDir="$PWD"
  localConfigFile="$currentDir/$(crc-env configFileName)"

  while [[ ! $currentDir = "$HOME" && -n $currentDir && ! -f $localConfigFile ]]; do 
    currentDir="${currentDir%/*}"
    localConfigFile="$currentDir/$(crc-env configFileName)"
  done

  if [[ -f $localConfigFile ]]; then
    printf "%s" "$localConfigFile"
  else
    echo ''
  fi
}

# DESCRIPTION: Sources the local config file if it exists
# USAGE: readLocalConfig
readLocalConfig() {
  local localConfigFile

  localConfigFile="$(findLocalConfig)"

  if [[ -n $localConfigFile ]]; then
    source "$localConfigFile"
  fi
}

# DESCRIPTION: Sources the both config files if they exist
# USAGE: readConfig
readConfig() {
  readGlobalConfig
  readLocalConfig
}

# DESCRIPTION: Returns the active editor
# USAGE: getEditor
getEditor() {
  local currentEditor

  if [[ $EDITOR ]]; then 
    currentEditor="$EDITOR"
  else
    currentEditor=vi
  fi

  printf "%s" "$currentEditor"
}

# DESCRIPTION: Edits a local config file
# USAGE: editConfigFile
editConfigFile() {
  local localConfigFile
  local currentEditor

  localConfigFile="$(findLocalConfig)"
  currentEditor="$(getEditor)"

  if [[ -z $localConfigFile ]]; then
    crc-utils die "$(crc-env generalErrorCode)" "A local config file doesn't exist"
  fi

  "$currentEditor" "$localConfigFile"
}

# DESCRIPTION: Creates a local config file
# USAGE: createConfigFile [DIRECTORY]
createConfigFile() {
  local directory
  local localConfigFile
  local currentEditor

  directory="${1:-$PWD}"

  if [[ ! -d $directory ]]; then
    crc-utils die "$(crc-env generalErrorCode)" "A directory $directory doesn't exist"
  fi

  localConfigFile="$directory/$(crc-env configFileName)"

  if [[ -f $localConfigFile ]]; then
    crc-utils die "$(crc-env generalErrorCode)" "A file $localConfigFile already exists"
  fi

  currentEditor="$(getEditor)"

  printf "createFileComponent=0\ncomponentType=functional\nfileExtention=js\naddCss=0\ntemplate=default" > "$localConfigFile"

  "$currentEditor" "$localConfigFile"
}

# DESCRIPTION: Deletes a local config file
# USAGE: deleteConfigFile
deleteConfigFile() {
  local localConfigFile

  localConfigFile="$(findLocalConfig)"

  if [[ -f $localConfigFile ]]; then
    rm "$localConfigFile"
  fi
}

# DESCRIPTION: The entry point for the crc-config
# USAGE: crc-config COMMAND
crc-config() {
  local commandToExec
  commandToExec="$1"
  shift

  case $commandToExec in
    create)
        createConfigFile "$@"
      ;;
    read)
        readConfig "$@"
      ;;
    edit)
        editConfigFile "$@"
      ;;
    delete)
        deleteConfigFile "$@"
      ;;
    *)
        crc-utils die "$(crc-env misuseErrorCode)" "An unknown command crc-config ""$commandToExec"
      ;;
  esac
}

crcConfigLoaded=1
